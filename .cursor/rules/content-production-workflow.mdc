---
description: 内容生产工作流程 - 从外部URL获取到多语言发布
globs: ["content/**/*", "public/images/**/*", "workflow-documentation.md"]
alwaysApply: false
---

# 内容生产工作流程规则

## 工作流程概述

当处理内容生产任务时，请遵循以下9个阶段的完整流程：

### 第一阶段：源内容获取
1. **URL获取与验证**
   - 验证外部URL的有效性
   - **优先使用 Jina Reader API**: `curl -s "https://r.jina.ai/{URL}" > /tmp/article.md`
   - 如果 Jina Reader 失败，回退到 curl 或浏览器获取内容
   - 处理网络超时和重试机制

2. **源内容检索**
   - 将内容保存到 `content/sources/` 目录
   - 使用命名规则：`{topic}_{date}.md`
   - Jina Reader API 自动处理 HTML 到 Markdown 的转换

### 第二阶段：资源处理
3. **图片提取与本地化**
   - 扫描源文档识别所有外部图片URL
   - 下载图片到 `public/images/` 目录
   - 保持原始文件名或使用语义化命名
   - 将外部链接替换为本地路径 `/images/filename.ext`

### 第三阶段：内容优化
4. **内容清理与重写**
   - 移除导航菜单、页脚、广告等无关内容
   - 保留所有技术细节、代码示例、最佳实践说明
   - 重新组织章节结构，提高可读性
   - 统一标题层级、代码块格式

5. **来源信息提取**
   - 从源内容或用户提供的信息中提取原作者
   - 获取原始文章的完整链接
   - 提取或确定文章的发布日期
   - 记录任何相关的版权声明或使用许可

6. **英文文档创建**
   - 创建文件到 `content/docs/en/best-practices/`
   - 使用 `.mdx` 格式（支持React组件）
   - 添加Front Matter包含标题、描述、语言标识、作者、来源、日期
   - 自动从源内容或用户提供的信息中提取作者、来源URL和发布日期

### 第四阶段：多语言支持
7. **中文翻译**
   - 创建文件到 `content/docs/zh/best-practices/`
   - 保持技术术语准确性
   - 适应中文读者习惯
   - 保留代码示例不变
   - 维持原文档结构
   - 包含相同的作者、来源、日期信息

### 第五阶段：发布与文档化
8. **文档发布**
   - 确保目录结构符合约定
   - 验证所有图片链接正确
   - 检查MDX语法无错误
   - 确保所有文档都包含正确的作者、来源和日期信息

9. **工作流程文档化**
   - 记录完整流程和工具使用
   - 更新工作流程文档

## 质量控制检查

### 内容质量检查
- [ ] 所有外部图片已本地化
- [ ] 图片链接正确指向本地路径
- [ ] 技术细节完整保留
- [ ] 代码示例格式正确
- [ ] 无关内容已清理

### 多语言质量检查
- [ ] 中文翻译准确自然
- [ ] 技术术语翻译一致
- [ ] 代码示例保持原样
- [ ] 文档结构保持一致

### 技术规范检查
- [ ] Front Matter 格式正确
- [ ] 文件路径符合约定
- [ ] 图片路径使用相对路径
- [ ] MDX语法无错误

### 来源和版权信息检查
- [ ] 在 Front Matter 中自动添加作者信息（author）
- [ ] 在 Front Matter 中自动添加来源链接（source）
- [ ] 在 Front Matter 中自动添加发布日期（date）
- [ ] 在文章末尾添加详细的来源和致谢章节
- [ ] 提供可点击的原始链接
- [ ] 说明文章基于原创工作扩展

## 工具与技术栈

### 核心工具
- **内容获取**: 
  - curl, 浏览器开发者工具
  - **Jina Reader API**: 使用 `https://r.jina.ai/{URL}` 直接获取页面的 Markdown 格式内容
  - 这是获取网页内容的最有效方法，自动处理 HTML 到 Markdown 的转换
- **文件操作**: Claude Code 编辑工具
- **图片处理**: wget, curl 下载
- **格式转换**: HTML到Markdown转换（Jina Reader API 自动处理）

### 文件格式
- **源文件**: .md (Markdown)
- **发布文件**: .mdx (MDX，支持React组件)
- **图片格式**: .png, .jpg, .svg

## 目录结构约定

```
project/
├── content/
│   ├── docs/          # 发布的文档
│   │   ├── en/        # 英文文档
│   │   └── zh/        # 中文文档
│   └── sources/       # 原始源材料
├── public/
│   └── images/        # 本地化图片资源
└── workflow-documentation.md  # 工作流程文档
```

## 错误处理与最佳实践

### 常见问题处理
1. **URL失效**: 建立URL有效性检查机制，设置重试机制
2. **图片下载失败**: 实现断点续传机制，建立下载队列
3. **翻译质量**: 建立技术术语词典，实施翻译质量评分
4. **构建失败**: 建立自动化构建测试，实施渐进式发布策略

### 自动化建议
1. **脚本化图片下载**: 创建自动提取和下载图片的脚本
2. **批量翻译工具**: 集成翻译API以提高效率
3. **质量检查脚本**: 自动验证链接有效性和格式正确性

## 使用说明

当处理内容生产任务时：
1. 首先确认源URL和内容类型
2. 按照8个阶段逐步执行
3. 在每个阶段完成后进行质量检查
4. 记录任何遇到的问题和解决方案
5. 更新工作流程文档以反映改进

@workflow-documentation.md
